A smart contract is a self-executing contract in which the conditions of the buyer-seller agreement are directly encoded into lines of code. The code and the agreements contained within it are spread throughout a decentralised blockchain network. Transactions are trackable and irreversible, and the code controls the execution.
Smart contracts allow for trustworthy transactions and agreements to be carried out between disparate, anonymous participants without the requirement for a centralised authority, legal system, or external enforcement mechanism.
While blockchain technology has come to be known largely as the foundation for bitcoin, it has progressed well beyond that role.

Hardhat is ehtereum developement enviroment which allows to make and deploy contracts while also giving an oppurtunity to test and debug those contract.
The contracts are developed using solidity and test cases are written using js. so nodejs is required to write the test cases. the testcases can be made fully automatic.

Typical steps to follow for developing your own hardhat project
Steps to follow:
1. Write smart contract using solidity
2. Compile the contract using hardhat runner.
3. Write tests
4. Deploy the contract on live Network

After developing the contract you can easily write test cases and also deploy it to live network. Its not the actual network but a network specifically directed to test the contract before final deployment.
Hardhat allows to run solidity locally. And also allows to easily deploy your contracts, run tests and debug Solidity code without dealing with live environments. Hardhat Network is a local Ethereum network designed for development. Hardhat is the best choice for Solidity debugging. You get Solidity stack traces, console.log and explicit error messages when transactions fail.
